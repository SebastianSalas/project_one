<% provide(:title, "Ruby") %>
<!DOCTYPE html>
<html>
<title><%= yield(:title) %> | Bootcamp Hogaru</title>

<title>Ruby | Bootcamp Hogaru</title>
<h1>Ruby</h1>
<p>1. Interpolación de strings</p>
<li> Permite insertar variables dentro de una cadena: #{nombre}. Ejemplo: nombre= Sebastian. "Buen día #{nombre}" -> Buen día Sebastian.</li>
<p>2. Cómo se declara un array y cómo se adiciona un elemento al final del array.</p>
<li>Se puede declarar así: array = [1,2,3] y para adicionar un elemento se usa el .push -> array.push(4) -> [1,2,3,4] </li>
<p>3. Cómo se itera un array utilizando el comando each.</p>
<li>arreglo.each do |element|

<p>       #code</p>
    
<p>   end</p></li>
<p>4. Cómo se declara un hash.</p>
<li>user = {"name" => "Sebastian", "age" => "19"}</li>
<p>5. Cómo se itera un hash utilizando el comando each</p>
<li>hash.each do |key, value|

<p>     #code</p>
    
<p>    end</p></li>
<p>6. Que es un block en ruby? De un ejemplo de cómo utilizarlo.</p>
<li>Un bloque es una parte de código que va dentro de paréntesis {} o dentro de do…end.</li>
<p>7. Cual es la convención en Ruby a la hora de nombrar variables?</p>
<li>La snake_case es para variables, métodos y nombrar los archivos. Para clases y módulos se usa CamelCase.</li>
<p>8. Qué son attr_reader, attr_writer y attr_accesor? Para qué sirven?</p>
<li>Sirven para acceder a los atributos de una clase. attr_reader se usa para leer, attr_writer se usa para escribir y attr_accesor se usa para ambas.</li>
</html>
